name: linux-armv6
on: push
jobs:

  linux-armv6:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python: [
          { version: '3.7', abi: 'cp37-cp37m' }
        ]
        target: [
          {
            arch: 'armv6',
            target: 'arm-unknown-linux-gnueabihf'
          },
        ]
    steps:
    - uses: actions/checkout@v2
    - name: Fetch armv6-tools
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'Arksine/armv6l-linux-cross-toolchain'
        version: 'tags/v11.2.0'
        file: 'arm-unknown-linux-gnueabihf-x86_64-ubuntu.tar.gz'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tools
      run: |
        tar -xf arm-unknown-linux-gnueabihf-x86_64-ubuntu.tar.gz
        echo ${{ github.workspace }}/${{ matrix.target.target }}/bin >> $GITHUB_PATH

    - name: Build Wheels
      uses: messense/maturin-action@v1
      env:
        CFLAGS: "-Os"
        LDFLAGS: "-Os -flto -Wl,--as-needed"
        CARGO_UNSTABLE_SPARSE_REGISTRY: "true"
        RUSTFLAGS: "-C opt-level=s"
        CARGO_FEATURE_YYJSON: "1"
        CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER: "${{ matrix.target.target }}-gcc"
      with:
        target: ${{ matrix.target.target }}
        rust-toolchain: nightly-2023-05-31
        manylinux: auto
        args: --release --strip --out dist -i python${{ matrix.python.version }}

    - uses: uraimo/run-on-arch-action@v2
      name: Test
      with:
        arch: ${{ matrix.target.arch }}
        distro: ubuntu22.04
        githubToken: ${{ github.token }}
        install: |
          export TZ=UTC
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y --no-install-recommends software-properties-common gpg gpg-agent curl
          add-apt-repository ppa:deadsnakes/ppa
          apt-get update
          apt-get install -y python${{ matrix.python.version }}-dev python${{ matrix.python.version }}-venv
        run: |
          python${{ matrix.python.version }} -m venv venv
          venv/bin/pip install -U pip wheel
          venv/bin/pip install -r test/requirements.txt
          venv/bin/pip install orjson --no-index --find-

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist
        retention-days: 1
